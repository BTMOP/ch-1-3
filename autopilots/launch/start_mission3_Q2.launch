<launch>
	<!-- vim: set ft=xml noet : -->
	<!-- example launch script for PX4 based FCU's -->

	<arg name="fcu_url" default="/dev/ttyACM0:921600" />
	<arg name="gcs_url" default="" />
	<arg name="tgt_system" default="1" />
	<arg name="tgt_component" default="1" />
	<arg name="log_output" default="screen" />
	<arg name="arduino_url" default="/dev/ttyACM0" />
	<arg name="arduino_baud" default="115200" />

	

<group ns="Quad2">
	<include file="$(find mavros)/launch/node.launch">
		<arg name="pluginlists_yaml" value="$(find mavros)/launch/px4_pluginlists.yaml" />
		<arg name="config_yaml" value="$(find mavros)/launch/px4_config.yaml" />

		<arg name="fcu_url" value="$(arg fcu_url)" />
		<arg name="gcs_url" value="$(arg gcs_url)" />
		<arg name="tgt_system" value="$(arg tgt_system)" />
		<arg name="tgt_component" value="$(arg tgt_component)" />
		<arg name="log_output" value="$(arg log_output)" />
	</include>
	
	<rosparam command="load" file="$(find autopilots)/configs/field_map.yaml" />
	
	<rosparam command="load" file="$(find cvision)/configs/color_thresholds.yaml" />

        <node pkg="cvision" type="videoBridge.py" name="videoBridge"  respawn="true">
        </node>

	<node pkg="cvision" type="getBgrBlob.py" name="getBgrBlob"  respawn="true" output="screen">
        </node>
	
	<!--node pkg="cvision" type="getColorBlob.py" name="getGreenBlob" args="'green'" respawn="true" output="screen">
        </node>

	<node pkg="cvision" type="getColorBlob.py" name="getBlueBlob" args="'blue'" respawn="true" output="screen">
        </node>

	<node pkg="cvision" type="getColorBlob.py" name="getRedBlob" args="'red'" respawn="true" output="screen">
        </node>

	<node pkg="cvision" type="getColorBlob.py" name="getYellowBlob" args="'yellow'" respawn="true" output="screen">
        </node-->

        <!--node pkg="topic_tools" type="throttle" name="throttle" args="messages /frameBGR 5.0 /frameBGR_reduced" required="true" >
        </node>

        <node pkg="rosbag" type="record" name="record" args="-o /home/odroid/ros_bags/ImgData.bag /frameBGR_reduced" required="true" >
        </node-->
	
	<node pkg="rosserial_python" type="serial_node.py" name="gripper_node" args="_port:=$(arg arduino_url) _baud:=$(arg arduino_baud)" output="screen">
        </node>

	<node pkg="autopilots" type="mission3.py" name="mission3" output="screen" respawn="true">	
        </node>
</group>

</launch>
